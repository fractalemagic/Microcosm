def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
  localPropertiesFile.withReader("UTF-8") { reader ->
    localProperties.load(reader)
  }
}

def flutterRoot = localProperties.getProperty("flutter.sdk")
if (flutterRoot == null) {
  throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply plugin: "com.android.application"
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
  compileSdkVersion 28

  lintOptions {
    disable "InvalidPackage"
  }

  defaultConfig {
    applicationId "com.gnawf.microcosm"
    minSdkVersion 16
    targetSdkVersion 28
    versionCode 16
    versionName "2.1.2"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  def keyStorePropertiesFile = new File("/Volumes/Signatures/microcosm.properties")
  def keyStoreProperties = new Properties()
  def keyStoreInStream = new FileInputStream(keyStorePropertiesFile)
  keyStoreProperties.load(keyStoreInStream)
  keyStoreInStream.close()

  signingConfigs {
    release {
      keyAlias keyStoreProperties["keyAlias"]
      keyPassword keyStoreProperties["keyPassword"]
      storeFile file(keyStoreProperties["storeFile"])
      storePassword keyStoreProperties["storePassword"]
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
    }
  }

  packagingOptions {
    exclude 'META-INF/proguard/androidx-annotations.pro'
  }
}

flutter {
  source "../.."
}

dependencies {
  testImplementation "junit:junit:4.12"
  androidTestImplementation "com.android.support.test:runner:1.0.1"
  androidTestImplementation "com.android.support.test.espresso:espresso-core:3.0.1"
}
