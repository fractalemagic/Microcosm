def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
  localPropertiesFile.withReader("UTF-8") { reader ->
    localProperties.load(reader)
  }
}

def flutterRoot = localProperties.getProperty("flutter.sdk")
if (flutterRoot == null) {
  throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
  flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
  flutterVersionName = "1.0"
}

apply plugin: "com.android.application"
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
  compileSdkVersion 29

  lintOptions {
    disable "InvalidPackage"
  }

  defaultConfig {
    applicationId "com.gnawf.microcosm"
    minSdkVersion 16
    targetSdkVersion 28
    versionCode flutterVersionCode.toInteger()
    versionName flutterVersionName
  }

  def keyStorePropertiesFile = new File("/Volumes/Signatures/microcosm.properties")
  if (keyStorePropertiesFile.exists()) {
    def keyStoreProperties = new Properties()
    def keyStoreInStream = new FileInputStream(keyStorePropertiesFile)
    keyStoreProperties.load(keyStoreInStream)
    keyStoreInStream.close()

    signingConfigs {
      release {
        keyAlias keyStoreProperties["keyAlias"]
        keyPassword keyStoreProperties["keyPassword"]
        storeFile file(keyStoreProperties["storeFile"])
        storePassword keyStoreProperties["storePassword"]
      }
    }

    buildTypes {
      release {
        signingConfig signingConfigs.release
      }
    }
  }

  buildTypes {
    debug {
      applicationIdSuffix ".debug"
    }
  }
}

flutter {
  source "../.."
}
