def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
  localPropertiesFile.withReader("UTF-8") { reader ->
    localProperties.load(reader)
  }
}

def flutterRoot = localProperties.getProperty("flutter.sdk")
if (flutterRoot == null) {
  throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
  flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
  flutterVersionName = "1.0"
}

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
  compileSdkVersion 29

  sourceSets {
    main.java.srcDirs += "src/main/kotlin"
  }

  lintOptions {
    disable "InvalidPackage"
  }

  defaultConfig {
    applicationId "com.gnawf.microcosm"
    minSdkVersion 21
    targetSdkVersion 29
    versionCode flutterVersionCode.toInteger()
    versionName flutterVersionName
  }

  def keyStorePropertiesFile = new File("/Volumes/Signatures/microcosm.properties")
  if (keyStorePropertiesFile.exists()) {
    def keyStoreProperties = new Properties()
    def keyStoreInStream = new FileInputStream(keyStorePropertiesFile)
    keyStoreProperties.load(keyStoreInStream)
    keyStoreInStream.close()

    signingConfigs {
      release {
        keyAlias keyStoreProperties["keyAlias"] as String
        keyPassword keyStoreProperties["keyPassword"] as String
        storeFile file(keyStoreProperties["storeFile"])
        storePassword keyStoreProperties["storePassword"] as String
      }
    }

    buildTypes {
      release {
        signingConfig signingConfigs.release
      }
    }
  }

  buildTypes {
    debug {
      applicationIdSuffix ".debug"
    }
    profile {
      applicationIdSuffix ".profile"
    }
  }
}

dependencies {
  implementation("org.jetbrains.kotlin:kotlin-stdlib:${rootProject.ext.kotlin_version}")
  implementation("androidx.work:work-runtime:${rootProject.ext.work_version}")
  implementation("com.squareup.okhttp3:okhttp:${rootProject.ext.okhttp_version}")
  implementation("com.squareup.moshi:moshi:1.9.2")
  kapt("com.squareup.moshi:moshi-kotlin-codegen:1.9.2")
}

flutter {
  source "../.."
}
